{"version":3,"sources":["api/people.js","components/user-directory/UserList.tsx","components/user-directory/UserProfile.tsx","components/user-directory/UserDirectoryContainer.tsx","App.tsx","index.tsx"],"names":["allUsers","sort","a","b","nameA","first_name","toUpperCase","nameB","forEach","user","i","full_name","last_name","initials","charAt","logins","map","login","Date","date","useStyles","makeStyles","theme","list","height","overflowY","paddingTop","width","backgroundColor","outline","UserList","users","usersLoaded","selectedUser","setSelectedUser","handleSearch","classes","List","className","ListItem","divider","TextField","placeholder","variant","size","onChange","InputProps","startAdornment","InputAdornment","position","fullWidth","key","id","alignItems","button","dense","selected","onClick","ListItemAvatar","Avatar","ListItemText","primary","secondary","email","length","primaryTypographyProps","card","marginLeft","loginActivity","maxHeight","overflow","UserProfile","Card","CardHeader","titleTypographyProps","title","subheader","avatar","action","IconButton","href","CardContent","Typography","Divider","city","state","getTime","display","formatDate","formatDistanceToNow","addSuffix","UserDirectoryContainer","props","useState","setUsersLoaded","setUsers","useEffect","Grid","container","spacing","item","xs","align","md","e","keyword","searchQuery","currentTarget","value","trim","filteredUsers","filter","toLowerCase","includes","createMuiTheme","MuiButtonBase","disableRipple","App","ThemeProvider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31670ede.chunk.js","sourcesContent":["import peopleJSON from './people.json';\r\n\r\n// sort users alphabetically by first name\r\nlet allUsers = peopleJSON.sort((a, b) => {\r\n    const nameA = a.first_name.toUpperCase();\r\n    const nameB = b.first_name.toUpperCase();\r\n    if (nameA < nameB) {\r\n        return -1;\r\n    }\r\n    if (nameA > nameB) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n});\r\n\r\n// create keys for a user's full name and initials\r\n// convert user logins array into date objects and sort in descending order\r\nallUsers.forEach((user, i) => {\r\n    user.full_name = `${user.first_name} ${user.last_name}`;\r\n    user.initials = `${user.first_name.charAt(0)}${user.last_name.charAt(0)}`;\r\n    user.logins = user.logins.map(login => new Date(login.date)).sort((a, b) => b - a);\r\n});\r\n\r\n\r\nfunction filterUsersByName(keyword) {\r\n    return allUsers.filter(user => user.full_name.toLowerCase().includes(keyword.toLowerCase()));\r\n}\r\n\r\nexport { allUsers, filterUsersByName };\r\n","import { Avatar, InputAdornment, List, ListItem, ListItemAvatar, ListItemText, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport React, { ChangeEvent, FunctionComponent } from 'react';\r\nimport IUser from '../../interfaces/IUser';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    list: {\r\n        height: '600px',\r\n        overflowY: 'auto',\r\n        paddingTop: '0px',\r\n        '&::-webkit-scrollbar': {\r\n            width: '0.4em'\r\n        },\r\n        '&::-webkit-scrollbar-track': {\r\n            '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.00)'\r\n        },\r\n        '&::-webkit-scrollbar-thumb': {\r\n            backgroundColor: 'rgba(0,0,0,.1)',\r\n            outline: '1px solid #eee'\r\n        }\r\n    }\r\n}));\r\n\r\ntype UserListProps = {\r\n    users: IUser[];\r\n    usersLoaded: boolean;\r\n    selectedUser: IUser | undefined;\r\n    setSelectedUser: (user: IUser | undefined) => void;\r\n    handleSearch: (event: ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst UserList: FunctionComponent<UserListProps> = ({\r\n    users,\r\n    usersLoaded,\r\n    selectedUser,\r\n    setSelectedUser,\r\n    handleSearch,\r\n}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <List className={classes.list}>\r\n            {usersLoaded && <>\r\n                <ListItem divider>\r\n                    <TextField\r\n                        placeholder=\"Search\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={handleSearch}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"end\" ><SearchIcon /></InputAdornment>,\r\n                        }}\r\n                        fullWidth />\r\n                </ListItem>\r\n\r\n                {users.map(user => {\r\n                    return <ListItem\r\n                        key={user.id}\r\n                        alignItems=\"flex-start\"\r\n                        button\r\n                        dense\r\n                        selected={user.id === selectedUser?.id}\r\n                        onClick={() => { setSelectedUser(user) }}>\r\n                        <ListItemAvatar>\r\n                            <Avatar>{user.initials}</Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            primary={user.full_name}\r\n                            secondary={user.email}\r\n                        />\r\n                    </ListItem>\r\n                })}\r\n            </>}\r\n\r\n            {(usersLoaded && !users.length) && <ListItem key={-1} alignItems=\"flex-start\">\r\n                <ListItemText primary={`No Results.`} primaryTypographyProps={{ variant: 'h6' }} />\r\n            </ListItem>}\r\n\r\n        </List>\r\n    )\r\n}\r\n\r\n\r\nexport default UserList;","import { Avatar, Card, CardContent, CardHeader, Divider, IconButton, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport { format as formatDate, formatDistanceToNow } from 'date-fns';\r\nimport React, { FunctionComponent } from 'react';\r\nimport IUser from '../../interfaces/IUser';\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        marginLeft: '5px',\r\n        height: '600px'\r\n    },\r\n    loginActivity: {\r\n        maxHeight: '200px',\r\n        overflow: 'auto',\r\n        '&::-webkit-scrollbar': {\r\n            width: '0.4em'\r\n        },\r\n        '&::-webkit-scrollbar-track': {\r\n            '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.00)'\r\n        },\r\n        '&::-webkit-scrollbar-thumb': {\r\n            backgroundColor: 'rgba(0,0,0,.1)',\r\n            outline: '1px solid #eee'\r\n        }\r\n    }\r\n}));\r\n\r\ntype UserProfileProps = {\r\n    user: IUser | undefined;\r\n}\r\n\r\nconst UserProfile: FunctionComponent<UserProfileProps> = ({\r\n    user\r\n}) => {\r\n    const classes = useStyles();\r\n\r\n    return (<>\r\n        <Card className={classes.card} variant=\"outlined\">\r\n            <CardHeader\r\n                titleTypographyProps={{ variant: 'h6' }}\r\n                title={user?.full_name}\r\n                subheader={user?.email}\r\n                avatar={<Avatar>{user?.initials}</Avatar>}\r\n                action={\r\n                    <IconButton href={`mailto:${user?.email}`}><EmailIcon /></IconButton>\r\n                }\r\n            >\r\n            </CardHeader>\r\n            <CardContent>\r\n                <Typography variant=\"body2\">\r\n                    <b>First Name:</b> {user?.first_name ? user.first_name : 'N/A'}\r\n                </Typography>\r\n            </CardContent>\r\n            <Divider />\r\n\r\n            <CardContent>\r\n                <Typography variant=\"body2\">\r\n                    <b>Last Name:</b> {user?.last_name ? user.last_name : 'N/A'}\r\n                </Typography>\r\n            </CardContent>\r\n            <Divider />\r\n\r\n            <CardContent>\r\n                <Typography variant=\"body2\">\r\n                    <b>Email Address:</b> {user?.email ? <a href={`mailto:${user.email}`}>{user.email}</a> : 'N/A'}\r\n                </Typography>\r\n            </CardContent>\r\n            <Divider />\r\n\r\n            <CardContent>\r\n                <Typography variant=\"body2\">\r\n                    <b>City:</b> {user?.city ? user.city : 'N/A'}\r\n                </Typography>\r\n            </CardContent>\r\n            <Divider />\r\n\r\n            <CardContent>\r\n                <Typography variant=\"body2\">\r\n                    <b>State:</b> {user?.state ? user.state : 'N/A'}\r\n                </Typography>\r\n            </CardContent>\r\n            <Divider />\r\n\r\n            <CardContent className={classes.loginActivity}>\r\n                <Typography variant=\"body2\"><b>Recent Logins:</b></Typography>\r\n                {(user?.logins) && (user?.logins as Date[]).map((login) => {\r\n                    return (<>\r\n                        <Typography key={`${login.getTime()}`} variant=\"caption\" display=\"block\">\r\n                            {`${formatDate(login, 'PPpp')} (${formatDistanceToNow(login, { addSuffix: true })})`}\r\n                        </Typography>\r\n                    </>);\r\n                })}\r\n\r\n            </CardContent>\r\n        </Card>\r\n    </>);\r\n\r\n}\r\n\r\nexport default UserProfile;","import { Grid, Typography } from '@material-ui/core';\r\nimport React, { ChangeEvent, FunctionComponent, useEffect, useState } from 'react';\r\nimport { allUsers, filterUsersByName } from '../../api/people';\r\nimport IUser from '../../interfaces/IUser';\r\nimport UserList from './UserList';\r\nimport UserProfile from './UserProfile';\r\n\r\n\r\nconst UserDirectoryContainer: FunctionComponent<{}> = (props) => {\r\n    const [usersLoaded, setUsersLoaded] = useState<boolean>(false);\r\n    const [users, setUsers] = useState<IUser[]>([]);\r\n    const [selectedUser, setSelectedUser] = useState<IUser | undefined>();\r\n\r\n    useEffect(() => {\r\n        setUsers(allUsers);\r\n        setUsersLoaded(true);\r\n        setSelectedUser(allUsers[0])\r\n    }, []);\r\n\r\n    function handleSearch(e: ChangeEvent<HTMLInputElement>) {\r\n        const searchQuery = e.currentTarget.value.trim();\r\n        const filteredUsers = filterUsersByName(searchQuery);\r\n        setUsers(filteredUsers);\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n                {usersLoaded && <Typography variant=\"h5\" align=\"left\">User Directory</Typography>}\r\n            </Grid>\r\n            <Grid item md={4} xs={12}>\r\n                <UserList\r\n                    users={users}\r\n                    usersLoaded={usersLoaded}\r\n                    handleSearch={handleSearch}\r\n                    setSelectedUser={setSelectedUser}\r\n                    selectedUser={selectedUser}\r\n                />\r\n            </Grid>\r\n            <Grid item md={8} xs={12}>\r\n                <UserProfile user={selectedUser} />\r\n            </Grid>\r\n        </Grid>);\r\n}\r\n\r\nexport default UserDirectoryContainer;","\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport UserDirectoryContainer from './components/user-directory/UserDirectoryContainer';\r\n\r\nconst theme = createMuiTheme({\r\n  props: {\r\n    MuiButtonBase: {\r\n      disableRipple: true,\r\n    },\r\n  },\r\n});\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <UserDirectoryContainer />\r\n            </Route>\r\n            <Route>\r\n              <UserDirectoryContainer />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}